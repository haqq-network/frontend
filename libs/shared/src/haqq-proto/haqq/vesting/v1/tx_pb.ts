// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file haqq/vesting/v1/tx.proto (package haqq.vesting.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Timestamp } from "@bufbuild/protobuf";
import { Period } from "../../../cosmos/vesting/v1beta1/vesting_pb.js";

/**
 * MsgCreateClawbackVestingAccount defines a message that enables creating a
 * ClawbackVestingAccount.
 *
 * @generated from message haqq.vesting.v1.MsgCreateClawbackVestingAccount
 */
export class MsgCreateClawbackVestingAccount extends Message<MsgCreateClawbackVestingAccount> {
  /**
   * from_address specifies the account to provide the funds and sign the
   * clawback request
   *
   * @generated from field: string from_address = 1;
   */
  fromAddress = "";

  /**
   * to_address specifies the account to receive the funds
   *
   * @generated from field: string to_address = 2;
   */
  toAddress = "";

  /**
   * start_time defines the time at which the vesting period begins
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * lockup_periods defines the unlocking schedule relative to the start_time
   *
   * @generated from field: repeated cosmos.vesting.v1beta1.Period lockup_periods = 4;
   */
  lockupPeriods: Period[] = [];

  /**
   * vesting_periods defines the vesting schedule relative to the start_time
   *
   * @generated from field: repeated cosmos.vesting.v1beta1.Period vesting_periods = 5;
   */
  vestingPeriods: Period[] = [];

  /**
   * merge specifies a the creation mechanism for existing
   * ClawbackVestingAccounts. If true, merge this new grant into an existing
   * ClawbackVestingAccount, or create it if it does not exist. If false,
   * creates a new account. New grants to an existing account must be from the
   * same from_address.
   *
   * @generated from field: bool merge = 6;
   */
  merge = false;

  constructor(data?: PartialMessage<MsgCreateClawbackVestingAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgCreateClawbackVestingAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "from_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "to_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start_time", kind: "message", T: Timestamp },
    { no: 4, name: "lockup_periods", kind: "message", T: Period, repeated: true },
    { no: 5, name: "vesting_periods", kind: "message", T: Period, repeated: true },
    { no: 6, name: "merge", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateClawbackVestingAccount {
    return new MsgCreateClawbackVestingAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateClawbackVestingAccount {
    return new MsgCreateClawbackVestingAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateClawbackVestingAccount {
    return new MsgCreateClawbackVestingAccount().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateClawbackVestingAccount | PlainMessage<MsgCreateClawbackVestingAccount> | undefined, b: MsgCreateClawbackVestingAccount | PlainMessage<MsgCreateClawbackVestingAccount> | undefined): boolean {
    return proto3.util.equals(MsgCreateClawbackVestingAccount, a, b);
  }
}

/**
 * MsgCreateClawbackVestingAccountResponse defines the
 * MsgCreateClawbackVestingAccount response type.
 *
 * @generated from message haqq.vesting.v1.MsgCreateClawbackVestingAccountResponse
 */
export class MsgCreateClawbackVestingAccountResponse extends Message<MsgCreateClawbackVestingAccountResponse> {
  constructor(data?: PartialMessage<MsgCreateClawbackVestingAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgCreateClawbackVestingAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCreateClawbackVestingAccountResponse {
    return new MsgCreateClawbackVestingAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCreateClawbackVestingAccountResponse {
    return new MsgCreateClawbackVestingAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCreateClawbackVestingAccountResponse {
    return new MsgCreateClawbackVestingAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCreateClawbackVestingAccountResponse | PlainMessage<MsgCreateClawbackVestingAccountResponse> | undefined, b: MsgCreateClawbackVestingAccountResponse | PlainMessage<MsgCreateClawbackVestingAccountResponse> | undefined): boolean {
    return proto3.util.equals(MsgCreateClawbackVestingAccountResponse, a, b);
  }
}

/**
 * MsgClawback defines a message that removes unvested tokens from a
 * ClawbackVestingAccount.
 *
 * @generated from message haqq.vesting.v1.MsgClawback
 */
export class MsgClawback extends Message<MsgClawback> {
  /**
   * funder_address is the address which funded the account
   *
   * @generated from field: string funder_address = 1;
   */
  funderAddress = "";

  /**
   * account_address is the address of the ClawbackVestingAccount to claw back
   * from.
   *
   * @generated from field: string account_address = 2;
   */
  accountAddress = "";

  /**
   * dest_address specifies where the clawed-back tokens should be transferred
   * to. If empty, the tokens will be transferred back to the original funder of
   * the account.
   *
   * @generated from field: string dest_address = 3;
   */
  destAddress = "";

  constructor(data?: PartialMessage<MsgClawback>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgClawback";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "funder_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "account_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "dest_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClawback {
    return new MsgClawback().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClawback {
    return new MsgClawback().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClawback {
    return new MsgClawback().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClawback | PlainMessage<MsgClawback> | undefined, b: MsgClawback | PlainMessage<MsgClawback> | undefined): boolean {
    return proto3.util.equals(MsgClawback, a, b);
  }
}

/**
 * MsgClawbackResponse defines the MsgClawback response type.
 *
 * @generated from message haqq.vesting.v1.MsgClawbackResponse
 */
export class MsgClawbackResponse extends Message<MsgClawbackResponse> {
  constructor(data?: PartialMessage<MsgClawbackResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgClawbackResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgClawbackResponse {
    return new MsgClawbackResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgClawbackResponse {
    return new MsgClawbackResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgClawbackResponse {
    return new MsgClawbackResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgClawbackResponse | PlainMessage<MsgClawbackResponse> | undefined, b: MsgClawbackResponse | PlainMessage<MsgClawbackResponse> | undefined): boolean {
    return proto3.util.equals(MsgClawbackResponse, a, b);
  }
}

/**
 * MsgUpdateVestingFunder defines a message that updates the funder account of a
 * ClawbackVestingAccount.
 *
 * @generated from message haqq.vesting.v1.MsgUpdateVestingFunder
 */
export class MsgUpdateVestingFunder extends Message<MsgUpdateVestingFunder> {
  /**
   * funder_address is the current funder address of the ClawbackVestingAccount
   *
   * @generated from field: string funder_address = 1;
   */
  funderAddress = "";

  /**
   * new_funder_address is the new address to replace the existing
   * funder_address
   *
   * @generated from field: string new_funder_address = 2;
   */
  newFunderAddress = "";

  /**
   * vesting_address is the address of the ClawbackVestingAccount being updated
   *
   * @generated from field: string vesting_address = 3;
   */
  vestingAddress = "";

  constructor(data?: PartialMessage<MsgUpdateVestingFunder>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgUpdateVestingFunder";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "funder_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "new_funder_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "vesting_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateVestingFunder {
    return new MsgUpdateVestingFunder().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateVestingFunder {
    return new MsgUpdateVestingFunder().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateVestingFunder {
    return new MsgUpdateVestingFunder().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateVestingFunder | PlainMessage<MsgUpdateVestingFunder> | undefined, b: MsgUpdateVestingFunder | PlainMessage<MsgUpdateVestingFunder> | undefined): boolean {
    return proto3.util.equals(MsgUpdateVestingFunder, a, b);
  }
}

/**
 * MsgUpdateVestingFunderResponse defines the MsgUpdateVestingFunder response
 * type.
 *
 * @generated from message haqq.vesting.v1.MsgUpdateVestingFunderResponse
 */
export class MsgUpdateVestingFunderResponse extends Message<MsgUpdateVestingFunderResponse> {
  constructor(data?: PartialMessage<MsgUpdateVestingFunderResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgUpdateVestingFunderResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgUpdateVestingFunderResponse {
    return new MsgUpdateVestingFunderResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgUpdateVestingFunderResponse {
    return new MsgUpdateVestingFunderResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgUpdateVestingFunderResponse {
    return new MsgUpdateVestingFunderResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgUpdateVestingFunderResponse | PlainMessage<MsgUpdateVestingFunderResponse> | undefined, b: MsgUpdateVestingFunderResponse | PlainMessage<MsgUpdateVestingFunderResponse> | undefined): boolean {
    return proto3.util.equals(MsgUpdateVestingFunderResponse, a, b);
  }
}

/**
 * MsgConvertVestingAccount defines a message that enables converting a vesting
 * account to a eth account
 *
 * @generated from message haqq.vesting.v1.MsgConvertVestingAccount
 */
export class MsgConvertVestingAccount extends Message<MsgConvertVestingAccount> {
  /**
   * vesting_address is the address of the vesting account to convert
   *
   * @generated from field: string vesting_address = 1;
   */
  vestingAddress = "";

  constructor(data?: PartialMessage<MsgConvertVestingAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgConvertVestingAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "vesting_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertVestingAccount {
    return new MsgConvertVestingAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertVestingAccount {
    return new MsgConvertVestingAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertVestingAccount {
    return new MsgConvertVestingAccount().fromJsonString(jsonString, options);
  }

  static equals(a: MsgConvertVestingAccount | PlainMessage<MsgConvertVestingAccount> | undefined, b: MsgConvertVestingAccount | PlainMessage<MsgConvertVestingAccount> | undefined): boolean {
    return proto3.util.equals(MsgConvertVestingAccount, a, b);
  }
}

/**
 * MsgConvertVestingAccountResponse defines the MsgConvertVestingAccount
 * response type.
 *
 * @generated from message haqq.vesting.v1.MsgConvertVestingAccountResponse
 */
export class MsgConvertVestingAccountResponse extends Message<MsgConvertVestingAccountResponse> {
  constructor(data?: PartialMessage<MsgConvertVestingAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgConvertVestingAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertVestingAccountResponse {
    return new MsgConvertVestingAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertVestingAccountResponse {
    return new MsgConvertVestingAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertVestingAccountResponse {
    return new MsgConvertVestingAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgConvertVestingAccountResponse | PlainMessage<MsgConvertVestingAccountResponse> | undefined, b: MsgConvertVestingAccountResponse | PlainMessage<MsgConvertVestingAccountResponse> | undefined): boolean {
    return proto3.util.equals(MsgConvertVestingAccountResponse, a, b);
  }
}

/**
 * MsgConvertIntoVestingAccount defines a message that enables converting a eth
 * account to a vesting account
 *
 * @generated from message haqq.vesting.v1.MsgConvertIntoVestingAccount
 */
export class MsgConvertIntoVestingAccount extends Message<MsgConvertIntoVestingAccount> {
  /**
   * from_address specifies the account to provide the funds and sign the
   * clawback request
   *
   * @generated from field: string from_address = 1;
   */
  fromAddress = "";

  /**
   * to_address is the account to be converted into clawback vesting account
   *
   * @generated from field: string to_address = 2;
   */
  toAddress = "";

  /**
   * start_time defines the time at which the vesting period begins
   *
   * @generated from field: google.protobuf.Timestamp start_time = 3;
   */
  startTime?: Timestamp;

  /**
   * lockup_periods defines the unlocking schedule relative to the start_time
   *
   * @generated from field: repeated cosmos.vesting.v1beta1.Period lockup_periods = 4;
   */
  lockupPeriods: Period[] = [];

  /**
   * vesting_periods defines the vesting schedule relative to the start_time
   *
   * @generated from field: repeated cosmos.vesting.v1beta1.Period vesting_periods = 5;
   */
  vestingPeriods: Period[] = [];

  /**
   * merge specifies a the conversion mechanism for existing
   * ClawbackVestingAccounts. If true, merge this new grant into an existing
   * ClawbackVestingAccount, or create it if it does not exist. If false,
   * creates a new account. New grants to an existing account must be from the
   * same from_address.
   *
   * @generated from field: bool merge = 6;
   */
  merge = false;

  /**
   * stake specifies a the post-creation flow. If true, delegate the total
   * amount to a specified validator. If false, do nothing.
   *
   * @generated from field: bool stake = 7;
   */
  stake = false;

  /**
   * validator_address specifies the validator to delegate tokens to.
   *
   * @generated from field: string validator_address = 8;
   */
  validatorAddress = "";

  constructor(data?: PartialMessage<MsgConvertIntoVestingAccount>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgConvertIntoVestingAccount";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "from_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "to_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "start_time", kind: "message", T: Timestamp },
    { no: 4, name: "lockup_periods", kind: "message", T: Period, repeated: true },
    { no: 5, name: "vesting_periods", kind: "message", T: Period, repeated: true },
    { no: 6, name: "merge", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 7, name: "stake", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 8, name: "validator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertIntoVestingAccount {
    return new MsgConvertIntoVestingAccount().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertIntoVestingAccount {
    return new MsgConvertIntoVestingAccount().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertIntoVestingAccount {
    return new MsgConvertIntoVestingAccount().fromJsonString(jsonString, options);
  }

  static equals(a: MsgConvertIntoVestingAccount | PlainMessage<MsgConvertIntoVestingAccount> | undefined, b: MsgConvertIntoVestingAccount | PlainMessage<MsgConvertIntoVestingAccount> | undefined): boolean {
    return proto3.util.equals(MsgConvertIntoVestingAccount, a, b);
  }
}

/**
 * MsgConvertIntoVestingAccountResponse defines the MsgConvertIntoVestingAccount
 * response type.
 *
 * @generated from message haqq.vesting.v1.MsgConvertIntoVestingAccountResponse
 */
export class MsgConvertIntoVestingAccountResponse extends Message<MsgConvertIntoVestingAccountResponse> {
  constructor(data?: PartialMessage<MsgConvertIntoVestingAccountResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "haqq.vesting.v1.MsgConvertIntoVestingAccountResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgConvertIntoVestingAccountResponse {
    return new MsgConvertIntoVestingAccountResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgConvertIntoVestingAccountResponse {
    return new MsgConvertIntoVestingAccountResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgConvertIntoVestingAccountResponse {
    return new MsgConvertIntoVestingAccountResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgConvertIntoVestingAccountResponse | PlainMessage<MsgConvertIntoVestingAccountResponse> | undefined, b: MsgConvertIntoVestingAccountResponse | PlainMessage<MsgConvertIntoVestingAccountResponse> | undefined): boolean {
    return proto3.util.equals(MsgConvertIntoVestingAccountResponse, a, b);
  }
}

