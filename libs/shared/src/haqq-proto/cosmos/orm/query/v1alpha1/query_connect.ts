// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts"
// @generated from file cosmos/orm/query/v1alpha1/query.proto (package cosmos.orm.query.v1alpha1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { GetRequest, GetResponse, ListRequest, ListResponse } from "./query_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Query is a generic gRPC service for querying ORM data.
 *
 * @generated from service cosmos.orm.query.v1alpha1.Query
 */
export const Query = {
  typeName: "cosmos.orm.query.v1alpha1.Query",
  methods: {
    /**
     * Get queries an ORM table against an unique index.
     *
     * @generated from rpc cosmos.orm.query.v1alpha1.Query.Get
     */
    get: {
      name: "Get",
      I: GetRequest,
      O: GetResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List queries an ORM table against an index.
     *
     * @generated from rpc cosmos.orm.query.v1alpha1.Query.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

