// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file cosmos/reflection/v1/reflection.proto (package cosmos.reflection.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { FileDescriptorProto, Message, proto3 } from '@bufbuild/protobuf';

/**
 * FileDescriptorsRequest is the Query/FileDescriptors request type.
 *
 * @generated from message cosmos.reflection.v1.FileDescriptorsRequest
 */
export class FileDescriptorsRequest extends Message<FileDescriptorsRequest> {
  constructor(data?: PartialMessage<FileDescriptorsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.reflection.v1.FileDescriptorsRequest';
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): FileDescriptorsRequest {
    return new FileDescriptorsRequest().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): FileDescriptorsRequest {
    return new FileDescriptorsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): FileDescriptorsRequest {
    return new FileDescriptorsRequest().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | FileDescriptorsRequest
      | PlainMessage<FileDescriptorsRequest>
      | undefined,
    b:
      | FileDescriptorsRequest
      | PlainMessage<FileDescriptorsRequest>
      | undefined,
  ): boolean {
    return proto3.util.equals(FileDescriptorsRequest, a, b);
  }
}

/**
 * FileDescriptorsResponse is the Query/FileDescriptors response type.
 *
 * @generated from message cosmos.reflection.v1.FileDescriptorsResponse
 */
export class FileDescriptorsResponse extends Message<FileDescriptorsResponse> {
  /**
   * files is the file descriptors.
   *
   * @generated from field: repeated google.protobuf.FileDescriptorProto files = 1;
   */
  files: FileDescriptorProto[] = [];

  constructor(data?: PartialMessage<FileDescriptorsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.reflection.v1.FileDescriptorsResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'files',
      kind: 'message',
      T: FileDescriptorProto,
      repeated: true,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): FileDescriptorsResponse {
    return new FileDescriptorsResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): FileDescriptorsResponse {
    return new FileDescriptorsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): FileDescriptorsResponse {
    return new FileDescriptorsResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | FileDescriptorsResponse
      | PlainMessage<FileDescriptorsResponse>
      | undefined,
    b:
      | FileDescriptorsResponse
      | PlainMessage<FileDescriptorsResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(FileDescriptorsResponse, a, b);
  }
}
