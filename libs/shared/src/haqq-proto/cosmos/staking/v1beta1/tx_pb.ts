// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file cosmos/staking/v1beta1/tx.proto (package cosmos.staking.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import {
  Any,
  Message,
  proto3,
  protoInt64,
  Timestamp,
} from '@bufbuild/protobuf';
import { CommissionRates, Description, Params } from './staking_pb';
import { Coin } from '../../base/v1beta1/coin_pb';

/**
 * MsgCreateValidator defines a SDK message for creating a new validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgCreateValidator
 */
export class MsgCreateValidator extends Message<MsgCreateValidator> {
  /**
   * @generated from field: cosmos.staking.v1beta1.Description description = 1;
   */
  description?: Description;

  /**
   * @generated from field: cosmos.staking.v1beta1.CommissionRates commission = 2;
   */
  commission?: CommissionRates;

  /**
   * @generated from field: string min_self_delegation = 3;
   */
  minSelfDelegation = '';

  /**
   * @generated from field: string delegator_address = 4;
   */
  delegatorAddress = '';

  /**
   * @generated from field: string validator_address = 5;
   */
  validatorAddress = '';

  /**
   * @generated from field: google.protobuf.Any pubkey = 6;
   */
  pubkey?: Any;

  /**
   * @generated from field: cosmos.base.v1beta1.Coin value = 7;
   */
  value?: Coin;

  constructor(data?: PartialMessage<MsgCreateValidator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgCreateValidator';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'description', kind: 'message', T: Description },
    { no: 2, name: 'commission', kind: 'message', T: CommissionRates },
    {
      no: 3,
      name: 'min_self_delegation',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 4,
      name: 'delegator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 5,
      name: 'validator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 6, name: 'pubkey', kind: 'message', T: Any },
    { no: 7, name: 'value', kind: 'message', T: Coin },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgCreateValidator {
    return new MsgCreateValidator().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgCreateValidator {
    return new MsgCreateValidator().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgCreateValidator {
    return new MsgCreateValidator().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgCreateValidator | PlainMessage<MsgCreateValidator> | undefined,
    b: MsgCreateValidator | PlainMessage<MsgCreateValidator> | undefined,
  ): boolean {
    return proto3.util.equals(MsgCreateValidator, a, b);
  }
}

/**
 * MsgCreateValidatorResponse defines the Msg/CreateValidator response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgCreateValidatorResponse
 */
export class MsgCreateValidatorResponse extends Message<MsgCreateValidatorResponse> {
  constructor(data?: PartialMessage<MsgCreateValidatorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    'cosmos.staking.v1beta1.MsgCreateValidatorResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgCreateValidatorResponse {
    return new MsgCreateValidatorResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgCreateValidatorResponse {
    return new MsgCreateValidatorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgCreateValidatorResponse {
    return new MsgCreateValidatorResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | MsgCreateValidatorResponse
      | PlainMessage<MsgCreateValidatorResponse>
      | undefined,
    b:
      | MsgCreateValidatorResponse
      | PlainMessage<MsgCreateValidatorResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(MsgCreateValidatorResponse, a, b);
  }
}

/**
 * MsgEditValidator defines a SDK message for editing an existing validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgEditValidator
 */
export class MsgEditValidator extends Message<MsgEditValidator> {
  /**
   * @generated from field: cosmos.staking.v1beta1.Description description = 1;
   */
  description?: Description;

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress = '';

  /**
   * We pass a reference to the new commission rate and min self delegation as
   * it's not mandatory to update. If not updated, the deserialized rate will be
   * zero with no way to distinguish if an update was intended.
   * REF: #2373
   *
   * @generated from field: string commission_rate = 3;
   */
  commissionRate = '';

  /**
   * @generated from field: string min_self_delegation = 4;
   */
  minSelfDelegation = '';

  constructor(data?: PartialMessage<MsgEditValidator>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgEditValidator';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'description', kind: 'message', T: Description },
    {
      no: 2,
      name: 'validator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 3,
      name: 'commission_rate',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 4,
      name: 'min_self_delegation',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgEditValidator {
    return new MsgEditValidator().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgEditValidator {
    return new MsgEditValidator().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgEditValidator {
    return new MsgEditValidator().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgEditValidator | PlainMessage<MsgEditValidator> | undefined,
    b: MsgEditValidator | PlainMessage<MsgEditValidator> | undefined,
  ): boolean {
    return proto3.util.equals(MsgEditValidator, a, b);
  }
}

/**
 * MsgEditValidatorResponse defines the Msg/EditValidator response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgEditValidatorResponse
 */
export class MsgEditValidatorResponse extends Message<MsgEditValidatorResponse> {
  constructor(data?: PartialMessage<MsgEditValidatorResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgEditValidatorResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgEditValidatorResponse {
    return new MsgEditValidatorResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgEditValidatorResponse {
    return new MsgEditValidatorResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgEditValidatorResponse {
    return new MsgEditValidatorResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | MsgEditValidatorResponse
      | PlainMessage<MsgEditValidatorResponse>
      | undefined,
    b:
      | MsgEditValidatorResponse
      | PlainMessage<MsgEditValidatorResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(MsgEditValidatorResponse, a, b);
  }
}

/**
 * MsgDelegate defines a SDK message for performing a delegation of coins
 * from a delegator to a validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgDelegate
 */
export class MsgDelegate extends Message<MsgDelegate> {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress = '';

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress = '';

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: Coin;

  constructor(data?: PartialMessage<MsgDelegate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgDelegate';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'delegator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 2,
      name: 'validator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 3, name: 'amount', kind: 'message', T: Coin },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgDelegate {
    return new MsgDelegate().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgDelegate {
    return new MsgDelegate().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgDelegate {
    return new MsgDelegate().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgDelegate | PlainMessage<MsgDelegate> | undefined,
    b: MsgDelegate | PlainMessage<MsgDelegate> | undefined,
  ): boolean {
    return proto3.util.equals(MsgDelegate, a, b);
  }
}

/**
 * MsgDelegateResponse defines the Msg/Delegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgDelegateResponse
 */
export class MsgDelegateResponse extends Message<MsgDelegateResponse> {
  constructor(data?: PartialMessage<MsgDelegateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgDelegateResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgDelegateResponse {
    return new MsgDelegateResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgDelegateResponse {
    return new MsgDelegateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgDelegateResponse {
    return new MsgDelegateResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgDelegateResponse | PlainMessage<MsgDelegateResponse> | undefined,
    b: MsgDelegateResponse | PlainMessage<MsgDelegateResponse> | undefined,
  ): boolean {
    return proto3.util.equals(MsgDelegateResponse, a, b);
  }
}

/**
 * MsgBeginRedelegate defines a SDK message for performing a redelegation
 * of coins from a delegator and source validator to a destination validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgBeginRedelegate
 */
export class MsgBeginRedelegate extends Message<MsgBeginRedelegate> {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress = '';

  /**
   * @generated from field: string validator_src_address = 2;
   */
  validatorSrcAddress = '';

  /**
   * @generated from field: string validator_dst_address = 3;
   */
  validatorDstAddress = '';

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 4;
   */
  amount?: Coin;

  constructor(data?: PartialMessage<MsgBeginRedelegate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgBeginRedelegate';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'delegator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 2,
      name: 'validator_src_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 3,
      name: 'validator_dst_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 4, name: 'amount', kind: 'message', T: Coin },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgBeginRedelegate {
    return new MsgBeginRedelegate().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgBeginRedelegate {
    return new MsgBeginRedelegate().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgBeginRedelegate {
    return new MsgBeginRedelegate().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgBeginRedelegate | PlainMessage<MsgBeginRedelegate> | undefined,
    b: MsgBeginRedelegate | PlainMessage<MsgBeginRedelegate> | undefined,
  ): boolean {
    return proto3.util.equals(MsgBeginRedelegate, a, b);
  }
}

/**
 * MsgBeginRedelegateResponse defines the Msg/BeginRedelegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgBeginRedelegateResponse
 */
export class MsgBeginRedelegateResponse extends Message<MsgBeginRedelegateResponse> {
  /**
   * @generated from field: google.protobuf.Timestamp completion_time = 1;
   */
  completionTime?: Timestamp;

  constructor(data?: PartialMessage<MsgBeginRedelegateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    'cosmos.staking.v1beta1.MsgBeginRedelegateResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'completion_time', kind: 'message', T: Timestamp },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgBeginRedelegateResponse {
    return new MsgBeginRedelegateResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgBeginRedelegateResponse {
    return new MsgBeginRedelegateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgBeginRedelegateResponse {
    return new MsgBeginRedelegateResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | MsgBeginRedelegateResponse
      | PlainMessage<MsgBeginRedelegateResponse>
      | undefined,
    b:
      | MsgBeginRedelegateResponse
      | PlainMessage<MsgBeginRedelegateResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(MsgBeginRedelegateResponse, a, b);
  }
}

/**
 * MsgUndelegate defines a SDK message for performing an undelegation from a
 * delegate and a validator.
 *
 * @generated from message cosmos.staking.v1beta1.MsgUndelegate
 */
export class MsgUndelegate extends Message<MsgUndelegate> {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress = '';

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress = '';

  /**
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: Coin;

  constructor(data?: PartialMessage<MsgUndelegate>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgUndelegate';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'delegator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 2,
      name: 'validator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 3, name: 'amount', kind: 'message', T: Coin },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgUndelegate {
    return new MsgUndelegate().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgUndelegate {
    return new MsgUndelegate().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgUndelegate {
    return new MsgUndelegate().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgUndelegate | PlainMessage<MsgUndelegate> | undefined,
    b: MsgUndelegate | PlainMessage<MsgUndelegate> | undefined,
  ): boolean {
    return proto3.util.equals(MsgUndelegate, a, b);
  }
}

/**
 * MsgUndelegateResponse defines the Msg/Undelegate response type.
 *
 * @generated from message cosmos.staking.v1beta1.MsgUndelegateResponse
 */
export class MsgUndelegateResponse extends Message<MsgUndelegateResponse> {
  /**
   * @generated from field: google.protobuf.Timestamp completion_time = 1;
   */
  completionTime?: Timestamp;

  constructor(data?: PartialMessage<MsgUndelegateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgUndelegateResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'completion_time', kind: 'message', T: Timestamp },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgUndelegateResponse {
    return new MsgUndelegateResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgUndelegateResponse {
    return new MsgUndelegateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgUndelegateResponse {
    return new MsgUndelegateResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgUndelegateResponse | PlainMessage<MsgUndelegateResponse> | undefined,
    b: MsgUndelegateResponse | PlainMessage<MsgUndelegateResponse> | undefined,
  ): boolean {
    return proto3.util.equals(MsgUndelegateResponse, a, b);
  }
}

/**
 * MsgCancelUnbondingDelegation defines the SDK message for performing a cancel unbonding delegation for delegator
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.staking.v1beta1.MsgCancelUnbondingDelegation
 */
export class MsgCancelUnbondingDelegation extends Message<MsgCancelUnbondingDelegation> {
  /**
   * @generated from field: string delegator_address = 1;
   */
  delegatorAddress = '';

  /**
   * @generated from field: string validator_address = 2;
   */
  validatorAddress = '';

  /**
   * amount is always less than or equal to unbonding delegation entry balance
   *
   * @generated from field: cosmos.base.v1beta1.Coin amount = 3;
   */
  amount?: Coin;

  /**
   * creation_height is the height which the unbonding took place.
   *
   * @generated from field: int64 creation_height = 4;
   */
  creationHeight = protoInt64.zero;

  constructor(data?: PartialMessage<MsgCancelUnbondingDelegation>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    'cosmos.staking.v1beta1.MsgCancelUnbondingDelegation';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'delegator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    {
      no: 2,
      name: 'validator_address',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
    { no: 3, name: 'amount', kind: 'message', T: Coin },
    {
      no: 4,
      name: 'creation_height',
      kind: 'scalar',
      T: 3 /* ScalarType.INT64 */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgCancelUnbondingDelegation {
    return new MsgCancelUnbondingDelegation().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgCancelUnbondingDelegation {
    return new MsgCancelUnbondingDelegation().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgCancelUnbondingDelegation {
    return new MsgCancelUnbondingDelegation().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | MsgCancelUnbondingDelegation
      | PlainMessage<MsgCancelUnbondingDelegation>
      | undefined,
    b:
      | MsgCancelUnbondingDelegation
      | PlainMessage<MsgCancelUnbondingDelegation>
      | undefined,
  ): boolean {
    return proto3.util.equals(MsgCancelUnbondingDelegation, a, b);
  }
}

/**
 * MsgCancelUnbondingDelegationResponse
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse
 */
export class MsgCancelUnbondingDelegationResponse extends Message<MsgCancelUnbondingDelegationResponse> {
  constructor(data?: PartialMessage<MsgCancelUnbondingDelegationResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName =
    'cosmos.staking.v1beta1.MsgCancelUnbondingDelegationResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgCancelUnbondingDelegationResponse {
    return new MsgCancelUnbondingDelegationResponse().fromBinary(
      bytes,
      options,
    );
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgCancelUnbondingDelegationResponse {
    return new MsgCancelUnbondingDelegationResponse().fromJson(
      jsonValue,
      options,
    );
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgCancelUnbondingDelegationResponse {
    return new MsgCancelUnbondingDelegationResponse().fromJsonString(
      jsonString,
      options,
    );
  }

  static equals(
    a:
      | MsgCancelUnbondingDelegationResponse
      | PlainMessage<MsgCancelUnbondingDelegationResponse>
      | undefined,
    b:
      | MsgCancelUnbondingDelegationResponse
      | PlainMessage<MsgCancelUnbondingDelegationResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(MsgCancelUnbondingDelegationResponse, a, b);
  }
}

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.staking.v1beta1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = '';

  /**
   * params defines the x/staking parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.staking.v1beta1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgUpdateParams';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'authority', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'params', kind: 'message', T: Params },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined,
    b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined,
  ): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.staking.v1beta1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.staking.v1beta1.MsgUpdateParamsResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | MsgUpdateParamsResponse
      | PlainMessage<MsgUpdateParamsResponse>
      | undefined,
    b:
      | MsgUpdateParamsResponse
      | PlainMessage<MsgUpdateParamsResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}
