// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts"
// @generated from file cosmos/auth/v1beta1/query.proto (package cosmos.auth.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import {
  AddressBytesToStringRequest,
  AddressBytesToStringResponse,
  AddressStringToBytesRequest,
  AddressStringToBytesResponse,
  Bech32PrefixRequest,
  Bech32PrefixResponse,
  QueryAccountAddressByIDRequest,
  QueryAccountAddressByIDResponse,
  QueryAccountInfoRequest,
  QueryAccountInfoResponse,
  QueryAccountRequest,
  QueryAccountResponse,
  QueryAccountsRequest,
  QueryAccountsResponse,
  QueryModuleAccountByNameRequest,
  QueryModuleAccountByNameResponse,
  QueryModuleAccountsRequest,
  QueryModuleAccountsResponse,
  QueryParamsRequest,
  QueryParamsResponse,
} from './query_pb';
import { MethodKind } from '@bufbuild/protobuf';

/**
 * Query defines the gRPC querier service.
 *
 * @generated from service cosmos.auth.v1beta1.Query
 */
export const Query = {
  typeName: 'cosmos.auth.v1beta1.Query',
  methods: {
    /**
     * Accounts returns all the existing accounts.
     *
     * When called from another module, this query might consume a high amount of
     * gas if the pagination field is incorrectly set.
     *
     * Since: cosmos-sdk 0.43
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.Accounts
     */
    accounts: {
      name: 'Accounts',
      I: QueryAccountsRequest,
      O: QueryAccountsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Account returns account details based on address.
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.Account
     */
    account: {
      name: 'Account',
      I: QueryAccountRequest,
      O: QueryAccountResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AccountAddressByID returns account address based on account number.
     *
     * Since: cosmos-sdk 0.46.2
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.AccountAddressByID
     */
    accountAddressByID: {
      name: 'AccountAddressByID',
      I: QueryAccountAddressByIDRequest,
      O: QueryAccountAddressByIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Params queries all parameters.
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.Params
     */
    params: {
      name: 'Params',
      I: QueryParamsRequest,
      O: QueryParamsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ModuleAccounts returns all the existing module accounts.
     *
     * Since: cosmos-sdk 0.46
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.ModuleAccounts
     */
    moduleAccounts: {
      name: 'ModuleAccounts',
      I: QueryModuleAccountsRequest,
      O: QueryModuleAccountsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ModuleAccountByName returns the module account info by module name
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.ModuleAccountByName
     */
    moduleAccountByName: {
      name: 'ModuleAccountByName',
      I: QueryModuleAccountByNameRequest,
      O: QueryModuleAccountByNameResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Bech32Prefix queries bech32Prefix
     *
     * Since: cosmos-sdk 0.46
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.Bech32Prefix
     */
    bech32Prefix: {
      name: 'Bech32Prefix',
      I: Bech32PrefixRequest,
      O: Bech32PrefixResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AddressBytesToString converts Account Address bytes to string
     *
     * Since: cosmos-sdk 0.46
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.AddressBytesToString
     */
    addressBytesToString: {
      name: 'AddressBytesToString',
      I: AddressBytesToStringRequest,
      O: AddressBytesToStringResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AddressStringToBytes converts Address string to bytes
     *
     * Since: cosmos-sdk 0.46
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.AddressStringToBytes
     */
    addressStringToBytes: {
      name: 'AddressStringToBytes',
      I: AddressStringToBytesRequest,
      O: AddressStringToBytesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * AccountInfo queries account info which is common to all account types.
     *
     * Since: cosmos-sdk 0.47
     *
     * @generated from rpc cosmos.auth.v1beta1.Query.AccountInfo
     */
    accountInfo: {
      name: 'AccountInfo',
      I: QueryAccountInfoRequest,
      O: QueryAccountInfoResponse,
      kind: MethodKind.Unary,
    },
  },
} as const;
