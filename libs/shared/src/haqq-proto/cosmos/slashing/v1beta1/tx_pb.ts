// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file cosmos/slashing/v1beta1/tx.proto (package cosmos.slashing.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';
import { Params } from './slashing_pb';

/**
 * MsgUnjail defines the Msg/Unjail request type
 *
 * @generated from message cosmos.slashing.v1beta1.MsgUnjail
 */
export class MsgUnjail extends Message<MsgUnjail> {
  /**
   * @generated from field: string validator_addr = 1;
   */
  validatorAddr = '';

  constructor(data?: PartialMessage<MsgUnjail>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.slashing.v1beta1.MsgUnjail';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'validator_addr',
      kind: 'scalar',
      T: 9 /* ScalarType.STRING */,
    },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgUnjail {
    return new MsgUnjail().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgUnjail {
    return new MsgUnjail().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgUnjail {
    return new MsgUnjail().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgUnjail | PlainMessage<MsgUnjail> | undefined,
    b: MsgUnjail | PlainMessage<MsgUnjail> | undefined,
  ): boolean {
    return proto3.util.equals(MsgUnjail, a, b);
  }
}

/**
 * MsgUnjailResponse defines the Msg/Unjail response type
 *
 * @generated from message cosmos.slashing.v1beta1.MsgUnjailResponse
 */
export class MsgUnjailResponse extends Message<MsgUnjailResponse> {
  constructor(data?: PartialMessage<MsgUnjailResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.slashing.v1beta1.MsgUnjailResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgUnjailResponse {
    return new MsgUnjailResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgUnjailResponse {
    return new MsgUnjailResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgUnjailResponse {
    return new MsgUnjailResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgUnjailResponse | PlainMessage<MsgUnjailResponse> | undefined,
    b: MsgUnjailResponse | PlainMessage<MsgUnjailResponse> | undefined,
  ): boolean {
    return proto3.util.equals(MsgUnjailResponse, a, b);
  }
}

/**
 * MsgUpdateParams is the Msg/UpdateParams request type.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.slashing.v1beta1.MsgUpdateParams
 */
export class MsgUpdateParams extends Message<MsgUpdateParams> {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = '';

  /**
   * params defines the x/slashing parameters to update.
   *
   * NOTE: All parameters must be supplied.
   *
   * @generated from field: cosmos.slashing.v1beta1.Params params = 2;
   */
  params?: Params;

  constructor(data?: PartialMessage<MsgUpdateParams>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.slashing.v1beta1.MsgUpdateParams';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'authority', kind: 'scalar', T: 9 /* ScalarType.STRING */ },
    { no: 2, name: 'params', kind: 'message', T: Params },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgUpdateParams {
    return new MsgUpdateParams().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgUpdateParams {
    return new MsgUpdateParams().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgUpdateParams {
    return new MsgUpdateParams().fromJsonString(jsonString, options);
  }

  static equals(
    a: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined,
    b: MsgUpdateParams | PlainMessage<MsgUpdateParams> | undefined,
  ): boolean {
    return proto3.util.equals(MsgUpdateParams, a, b);
  }
}

/**
 * MsgUpdateParamsResponse defines the response structure for executing a
 * MsgUpdateParams message.
 *
 * Since: cosmos-sdk 0.47
 *
 * @generated from message cosmos.slashing.v1beta1.MsgUpdateParamsResponse
 */
export class MsgUpdateParamsResponse extends Message<MsgUpdateParamsResponse> {
  constructor(data?: PartialMessage<MsgUpdateParamsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'cosmos.slashing.v1beta1.MsgUpdateParamsResponse';
  static readonly fields: FieldList = proto3.util.newFieldList(() => []);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): MsgUpdateParamsResponse {
    return new MsgUpdateParamsResponse().fromJsonString(jsonString, options);
  }

  static equals(
    a:
      | MsgUpdateParamsResponse
      | PlainMessage<MsgUpdateParamsResponse>
      | undefined,
    b:
      | MsgUpdateParamsResponse
      | PlainMessage<MsgUpdateParamsResponse>
      | undefined,
  ): boolean {
    return proto3.util.equals(MsgUpdateParamsResponse, a, b);
  }
}
