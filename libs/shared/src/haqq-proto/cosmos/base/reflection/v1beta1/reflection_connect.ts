// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts"
// @generated from file cosmos/base/reflection/v1beta1/reflection.proto (package cosmos.base.reflection.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ListAllInterfacesRequest, ListAllInterfacesResponse, ListImplementationsRequest, ListImplementationsResponse } from "./reflection_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * ReflectionService defines a service for interface reflection.
 *
 * @generated from service cosmos.base.reflection.v1beta1.ReflectionService
 */
export const ReflectionService = {
  typeName: "cosmos.base.reflection.v1beta1.ReflectionService",
  methods: {
    /**
     * ListAllInterfaces lists all the interfaces registered in the interface
     * registry.
     *
     * @generated from rpc cosmos.base.reflection.v1beta1.ReflectionService.ListAllInterfaces
     */
    listAllInterfaces: {
      name: "ListAllInterfaces",
      I: ListAllInterfacesRequest,
      O: ListAllInterfacesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListImplementations list all the concrete types that implement a given
     * interface.
     *
     * @generated from rpc cosmos.base.reflection.v1beta1.ReflectionService.ListImplementations
     */
    listImplementations: {
      name: "ListImplementations",
      I: ListImplementationsRequest,
      O: ListImplementationsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

