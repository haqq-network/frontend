// Since: cosmos-sdk 0.46

// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file cosmos/upgrade/v1beta1/tx.proto (package cosmos.upgrade.v1beta1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Plan } from "./upgrade_pb.js";

/**
 * MsgSoftwareUpgrade is the Msg/SoftwareUpgrade request type.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.upgrade.v1beta1.MsgSoftwareUpgrade
 */
export class MsgSoftwareUpgrade extends Message<MsgSoftwareUpgrade> {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  /**
   * plan is the upgrade plan.
   *
   * @generated from field: cosmos.upgrade.v1beta1.Plan plan = 2;
   */
  plan?: Plan;

  constructor(data?: PartialMessage<MsgSoftwareUpgrade>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.upgrade.v1beta1.MsgSoftwareUpgrade";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "plan", kind: "message", T: Plan },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSoftwareUpgrade {
    return new MsgSoftwareUpgrade().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSoftwareUpgrade {
    return new MsgSoftwareUpgrade().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSoftwareUpgrade {
    return new MsgSoftwareUpgrade().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSoftwareUpgrade | PlainMessage<MsgSoftwareUpgrade> | undefined, b: MsgSoftwareUpgrade | PlainMessage<MsgSoftwareUpgrade> | undefined): boolean {
    return proto3.util.equals(MsgSoftwareUpgrade, a, b);
  }
}

/**
 * MsgSoftwareUpgradeResponse is the Msg/SoftwareUpgrade response type.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse
 */
export class MsgSoftwareUpgradeResponse extends Message<MsgSoftwareUpgradeResponse> {
  constructor(data?: PartialMessage<MsgSoftwareUpgradeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.upgrade.v1beta1.MsgSoftwareUpgradeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgSoftwareUpgradeResponse {
    return new MsgSoftwareUpgradeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgSoftwareUpgradeResponse {
    return new MsgSoftwareUpgradeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgSoftwareUpgradeResponse {
    return new MsgSoftwareUpgradeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgSoftwareUpgradeResponse | PlainMessage<MsgSoftwareUpgradeResponse> | undefined, b: MsgSoftwareUpgradeResponse | PlainMessage<MsgSoftwareUpgradeResponse> | undefined): boolean {
    return proto3.util.equals(MsgSoftwareUpgradeResponse, a, b);
  }
}

/**
 * MsgCancelUpgrade is the Msg/CancelUpgrade request type.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.upgrade.v1beta1.MsgCancelUpgrade
 */
export class MsgCancelUpgrade extends Message<MsgCancelUpgrade> {
  /**
   * authority is the address that controls the module (defaults to x/gov unless overwritten).
   *
   * @generated from field: string authority = 1;
   */
  authority = "";

  constructor(data?: PartialMessage<MsgCancelUpgrade>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.upgrade.v1beta1.MsgCancelUpgrade";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "authority", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCancelUpgrade {
    return new MsgCancelUpgrade().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCancelUpgrade {
    return new MsgCancelUpgrade().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCancelUpgrade {
    return new MsgCancelUpgrade().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCancelUpgrade | PlainMessage<MsgCancelUpgrade> | undefined, b: MsgCancelUpgrade | PlainMessage<MsgCancelUpgrade> | undefined): boolean {
    return proto3.util.equals(MsgCancelUpgrade, a, b);
  }
}

/**
 * MsgCancelUpgradeResponse is the Msg/CancelUpgrade response type.
 *
 * Since: cosmos-sdk 0.46
 *
 * @generated from message cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse
 */
export class MsgCancelUpgradeResponse extends Message<MsgCancelUpgradeResponse> {
  constructor(data?: PartialMessage<MsgCancelUpgradeResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "cosmos.upgrade.v1beta1.MsgCancelUpgradeResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MsgCancelUpgradeResponse {
    return new MsgCancelUpgradeResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MsgCancelUpgradeResponse {
    return new MsgCancelUpgradeResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MsgCancelUpgradeResponse {
    return new MsgCancelUpgradeResponse().fromJsonString(jsonString, options);
  }

  static equals(a: MsgCancelUpgradeResponse | PlainMessage<MsgCancelUpgradeResponse> | undefined, b: MsgCancelUpgradeResponse | PlainMessage<MsgCancelUpgradeResponse> | undefined): boolean {
    return proto3.util.equals(MsgCancelUpgradeResponse, a, b);
  }
}

