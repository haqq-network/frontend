// Since: cosmos-sdk 0.46

// @generated by protoc-gen-connect-es v1.1.3 with parameter "target=ts"
// @generated from file cosmos/group/v1/tx.proto (package cosmos.group.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { MsgCreateGroup, MsgCreateGroupPolicy, MsgCreateGroupPolicyResponse, MsgCreateGroupResponse, MsgCreateGroupWithPolicy, MsgCreateGroupWithPolicyResponse, MsgExec, MsgExecResponse, MsgLeaveGroup, MsgLeaveGroupResponse, MsgSubmitProposal, MsgSubmitProposalResponse, MsgUpdateGroupAdmin, MsgUpdateGroupAdminResponse, MsgUpdateGroupMembers, MsgUpdateGroupMembersResponse, MsgUpdateGroupMetadata, MsgUpdateGroupMetadataResponse, MsgUpdateGroupPolicyAdmin, MsgUpdateGroupPolicyAdminResponse, MsgUpdateGroupPolicyDecisionPolicy, MsgUpdateGroupPolicyDecisionPolicyResponse, MsgUpdateGroupPolicyMetadata, MsgUpdateGroupPolicyMetadataResponse, MsgVote, MsgVoteResponse, MsgWithdrawProposal, MsgWithdrawProposalResponse } from "./tx_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * Msg is the cosmos.group.v1 Msg service.
 *
 * @generated from service cosmos.group.v1.Msg
 */
export const Msg = {
  typeName: "cosmos.group.v1.Msg",
  methods: {
    /**
     * CreateGroup creates a new group with an admin account address, a list of members and some optional metadata.
     *
     * @generated from rpc cosmos.group.v1.Msg.CreateGroup
     */
    createGroup: {
      name: "CreateGroup",
      I: MsgCreateGroup,
      O: MsgCreateGroupResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateGroupMembers updates the group members with given group id and admin address.
     *
     * @generated from rpc cosmos.group.v1.Msg.UpdateGroupMembers
     */
    updateGroupMembers: {
      name: "UpdateGroupMembers",
      I: MsgUpdateGroupMembers,
      O: MsgUpdateGroupMembersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateGroupAdmin updates the group admin with given group id and previous admin address.
     *
     * @generated from rpc cosmos.group.v1.Msg.UpdateGroupAdmin
     */
    updateGroupAdmin: {
      name: "UpdateGroupAdmin",
      I: MsgUpdateGroupAdmin,
      O: MsgUpdateGroupAdminResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateGroupMetadata updates the group metadata with given group id and admin address.
     *
     * @generated from rpc cosmos.group.v1.Msg.UpdateGroupMetadata
     */
    updateGroupMetadata: {
      name: "UpdateGroupMetadata",
      I: MsgUpdateGroupMetadata,
      O: MsgUpdateGroupMetadataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateGroupPolicy creates a new group policy using given DecisionPolicy.
     *
     * @generated from rpc cosmos.group.v1.Msg.CreateGroupPolicy
     */
    createGroupPolicy: {
      name: "CreateGroupPolicy",
      I: MsgCreateGroupPolicy,
      O: MsgCreateGroupPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * CreateGroupWithPolicy creates a new group with policy.
     *
     * @generated from rpc cosmos.group.v1.Msg.CreateGroupWithPolicy
     */
    createGroupWithPolicy: {
      name: "CreateGroupWithPolicy",
      I: MsgCreateGroupWithPolicy,
      O: MsgCreateGroupWithPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateGroupPolicyAdmin updates a group policy admin.
     *
     * @generated from rpc cosmos.group.v1.Msg.UpdateGroupPolicyAdmin
     */
    updateGroupPolicyAdmin: {
      name: "UpdateGroupPolicyAdmin",
      I: MsgUpdateGroupPolicyAdmin,
      O: MsgUpdateGroupPolicyAdminResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateGroupPolicyDecisionPolicy allows a group policy's decision policy to be updated.
     *
     * @generated from rpc cosmos.group.v1.Msg.UpdateGroupPolicyDecisionPolicy
     */
    updateGroupPolicyDecisionPolicy: {
      name: "UpdateGroupPolicyDecisionPolicy",
      I: MsgUpdateGroupPolicyDecisionPolicy,
      O: MsgUpdateGroupPolicyDecisionPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * UpdateGroupPolicyMetadata updates a group policy metadata.
     *
     * @generated from rpc cosmos.group.v1.Msg.UpdateGroupPolicyMetadata
     */
    updateGroupPolicyMetadata: {
      name: "UpdateGroupPolicyMetadata",
      I: MsgUpdateGroupPolicyMetadata,
      O: MsgUpdateGroupPolicyMetadataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * SubmitProposal submits a new proposal.
     *
     * @generated from rpc cosmos.group.v1.Msg.SubmitProposal
     */
    submitProposal: {
      name: "SubmitProposal",
      I: MsgSubmitProposal,
      O: MsgSubmitProposalResponse,
      kind: MethodKind.Unary,
    },
    /**
     * WithdrawProposal withdraws a proposal.
     *
     * @generated from rpc cosmos.group.v1.Msg.WithdrawProposal
     */
    withdrawProposal: {
      name: "WithdrawProposal",
      I: MsgWithdrawProposal,
      O: MsgWithdrawProposalResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Vote allows a voter to vote on a proposal.
     *
     * @generated from rpc cosmos.group.v1.Msg.Vote
     */
    vote: {
      name: "Vote",
      I: MsgVote,
      O: MsgVoteResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Exec executes a proposal.
     *
     * @generated from rpc cosmos.group.v1.Msg.Exec
     */
    exec: {
      name: "Exec",
      I: MsgExec,
      O: MsgExecResponse,
      kind: MethodKind.Unary,
    },
    /**
     * LeaveGroup allows a group member to leave the group.
     *
     * @generated from rpc cosmos.group.v1.Msg.LeaveGroup
     */
    leaveGroup: {
      name: "LeaveGroup",
      I: MsgLeaveGroup,
      O: MsgLeaveGroupResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

