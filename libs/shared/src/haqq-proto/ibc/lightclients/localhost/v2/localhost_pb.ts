// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file ibc/lightclients/localhost/v2/localhost.proto (package ibc.lightclients.localhost.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3 } from '@bufbuild/protobuf';
import { Height } from '../../../core/client/v1/client_pb';

/**
 * ClientState defines the 09-localhost client state
 *
 * @generated from message ibc.lightclients.localhost.v2.ClientState
 */
export class ClientState extends Message<ClientState> {
  /**
   * the latest block height
   *
   * @generated from field: ibc.core.client.v1.Height latest_height = 1;
   */
  latestHeight?: Height;

  constructor(data?: PartialMessage<ClientState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'ibc.lightclients.localhost.v2.ClientState';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: 'latest_height', kind: 'message', T: Height },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): ClientState {
    return new ClientState().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): ClientState {
    return new ClientState().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): ClientState {
    return new ClientState().fromJsonString(jsonString, options);
  }

  static equals(
    a: ClientState | PlainMessage<ClientState> | undefined,
    b: ClientState | PlainMessage<ClientState> | undefined,
  ): boolean {
    return proto3.util.equals(ClientState, a, b);
  }
}
