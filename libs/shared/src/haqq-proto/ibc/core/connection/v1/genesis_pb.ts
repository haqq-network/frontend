// @generated by protoc-gen-es v1.3.1 with parameter "target=ts"
// @generated from file ibc/core/connection/v1/genesis.proto (package ibc.core.connection.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type {
  BinaryReadOptions,
  FieldList,
  JsonReadOptions,
  JsonValue,
  PartialMessage,
  PlainMessage,
} from '@bufbuild/protobuf';
import { Message, proto3, protoInt64 } from '@bufbuild/protobuf';
import { ConnectionPaths, IdentifiedConnection, Params } from './connection_pb';

/**
 * GenesisState defines the ibc connection submodule's genesis state.
 *
 * @generated from message ibc.core.connection.v1.GenesisState
 */
export class GenesisState extends Message<GenesisState> {
  /**
   * @generated from field: repeated ibc.core.connection.v1.IdentifiedConnection connections = 1;
   */
  connections: IdentifiedConnection[] = [];

  /**
   * @generated from field: repeated ibc.core.connection.v1.ConnectionPaths client_connection_paths = 2;
   */
  clientConnectionPaths: ConnectionPaths[] = [];

  /**
   * the sequence for the next generated connection identifier
   *
   * @generated from field: uint64 next_connection_sequence = 3;
   */
  nextConnectionSequence = protoInt64.zero;

  /**
   * @generated from field: ibc.core.connection.v1.Params params = 4;
   */
  params?: Params;

  constructor(data?: PartialMessage<GenesisState>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = 'ibc.core.connection.v1.GenesisState';
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    {
      no: 1,
      name: 'connections',
      kind: 'message',
      T: IdentifiedConnection,
      repeated: true,
    },
    {
      no: 2,
      name: 'client_connection_paths',
      kind: 'message',
      T: ConnectionPaths,
      repeated: true,
    },
    {
      no: 3,
      name: 'next_connection_sequence',
      kind: 'scalar',
      T: 4 /* ScalarType.UINT64 */,
    },
    { no: 4, name: 'params', kind: 'message', T: Params },
  ]);

  static fromBinary(
    bytes: Uint8Array,
    options?: Partial<BinaryReadOptions>,
  ): GenesisState {
    return new GenesisState().fromBinary(bytes, options);
  }

  static fromJson(
    jsonValue: JsonValue,
    options?: Partial<JsonReadOptions>,
  ): GenesisState {
    return new GenesisState().fromJson(jsonValue, options);
  }

  static fromJsonString(
    jsonString: string,
    options?: Partial<JsonReadOptions>,
  ): GenesisState {
    return new GenesisState().fromJsonString(jsonString, options);
  }

  static equals(
    a: GenesisState | PlainMessage<GenesisState> | undefined,
    b: GenesisState | PlainMessage<GenesisState> | undefined,
  ): boolean {
    return proto3.util.equals(GenesisState, a, b);
  }
}
