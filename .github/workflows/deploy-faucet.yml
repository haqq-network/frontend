name: Faucet Deployment

on:
  push:
    branches:
      - dev
      - prod
  pull_request:
    branches:
      - dev
  workflow_dispatch:
  merge_group:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_FAUCET_PROJECT_ID }}
  GIT_COMMIT_SHA: ${{ github.sha }}
  NX_SKIP_NX_CACHE: true

jobs:
  Deploy-Preview:
    runs-on: frontend
    if: github.ref == 'refs/heads/dev' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
      - name: Setup dependencies
        run: yarn install --immutable
      - name: Pull Vercel Environment Information
        run: yarn vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: yarn vercel build --token=${{ secrets.VERCEL_TOKEN }} --local-config vercel-react.json
      - name: Deploy Project Artifacts to Vercel
        run: yarn vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} --local-config vercel-react.json

  Deploy-Production:
    runs-on: frontend
    if: github.ref == 'refs/heads/prod'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: yarn
      - name: Setup dependencies
        run: yarn install --immutable
      - name: Pull Vercel Environment Information
        run: yarn vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: yarn vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} --local-config vercel-react.json
      - name: Deploy Project Artifacts to Vercel
        run: yarn vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} --local-config vercel-react.json
